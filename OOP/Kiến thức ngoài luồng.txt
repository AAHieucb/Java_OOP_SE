#***Khái niệm hướng đối tượng
Hướng đối tượng: Là 1 lối viết code. Module thì tái dùng hàm, OOP thì tái dùng class
VD: ta bóp cò thì đạn sẽ bắn ra từ khẩu súng. Nó theo thứ tự như 1 thủ tục. Nhưng khi hướng đối tượng ta phải tạo ra các đối tượng như viên đạn, khẩu súng, người tác động và cho 3 đối tượng ấy tác động lẫn nhau là người bóp cò, thì súng nổ, đạn văng đi. Góc nhìn nó khác với hướng thủ tục. Code sẽ dễ đọc hơn, dễ bảo trì.
Bản chất của OOP là các object truyền message cho nhau. Bản chất của Structured-oriented là cấu trúc dữ liệu và thuật toán.
VD: Để nắm vững OOP ta phải luôn đinh ninh rằng bản thân ta đang k làm 1 thứ, tức ta k hề gọi 1 hàm nào cả mà bản chất là ta đang bảo 1 object khác thực hiện hành động gì bằng cách truyền cho nó 1 message (gọi hàm của nó).
=> Chú ý: Khi nói về class phải biết nó có thuộc tính và method gì. Còn khi nói về 1 relationship, phải biết cái nào chứa cái nào ở dạng 1 list hay 1 phần tử.



-> Method(nói trong OOP)/Function call binding là việc nó compare tên hàm và list các biến để tìm ra function definition đúng cần thực hiện. VD gọi foo() và foo(10); thì nó refer đến vùng nhớ đúng loại hàm cần gọi, thao tác đó gọi là function call binding. Nó chia 2 loại:
1) Static binding là vc binding ngay trong compiling time, tốc độ sẽ nhanh hơn cái trên và lỗi sẽ báo từ compiling time. 
Trong C++ thì function call binding hay method binding nó đều là static function call binding luôn.
2) Dynamic binding là method gọi vào lúc run-time. Java mặc định dùng dynamic binding.
=> Đương nhiên khác nhau vì 1 cái chỉ build, 1 cái là nửa build nửa interpret

